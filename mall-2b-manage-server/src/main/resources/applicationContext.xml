<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:jee="http://www.springframework.org/schema/jee"
    xmlns:tx="http://www.springframework.org/schema/tx" 
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:task="http://www.springframework.org/schema/task" 
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:cache="http://www.springframework.org/schema/cache"
    xmlns:c="http://www.springframework.org/schema/c"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/beans  http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
    http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
    http://www.springframework.org/schema/jee  http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
    http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-4.0.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd"
    default-lazy-init="true">

	<description>Spring公共配置</description>

	<!--开启注解 -->
	<context:annotation-config />
	
	<!-- 开启自动切面代理 -->
	<aop:aspectj-autoproxy />
	
	<context:component-scan base-package="com.i9he" name-generator="com.i9he.m2b.manage.utils.FullBeanNameGenerator">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 开启注解事务支持 -->	
	<!-- 
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		 <property name="dataSource" ref="dataSourcePrivilegeCorba"/>
	</bean>	
	 -->
	<!-- AOP切面日志 -->
	<bean id="simpleLoggerInterceptor" class="com.i9he.m2b.manage.utils.SimpleLoggerInterceptor"></bean>
	<aop:config proxy-target-class="true">
		<aop:pointcut expression="execution (* com.i9he.m2b.manage.biz.impl..*.*(..))" id="serviceMethodPointcut"/>
		<aop:advisor advice-ref="simpleLoggerInterceptor" pointcut-ref="serviceMethodPointcut"/>
	</aop:config>
	
	<!-- 定义受环境影响易变的变量 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>file:/d:/i9he/config/*.properties</value> 
				<value>file:/d:/i9he/config/mall-2b-manage-server/*.properties</value>
<!--  				<value>file:/d:/conf/cl/assets-server/*.properties</value> -->
				<!-- 服务器生产环境配置 -->
                <!-- value>file:/etc/conf/cl/privilege-server/*.properties</value-->
			</list>
		</property>
	</bean>
	
	<!-- Freemarker配置，参考： http://www.cnblogs.com/hoojo/archive/2011/04/19/2020551.html-->
	<bean id="freemarkerConfig"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<!-- 视图资源位置 -->
		<property name="templateLoaderPath" value="/WEB-INF/ftl/" />
		<property name="defaultEncoding" value="UTF-8" />
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">0</prop><!-- 模板更新延时 -->
				<prop key="locale">zh_CN</prop>
				<prop key="default_encoding">UTF-8</prop>
				<prop key="output_encoding">UTF-8</prop>
				<prop key="template_exception_handler">rethrow</prop>
		        <prop key="number_format">#.##</prop>
		        <prop key="date_format">yyyy-MM-dd</prop>
		        <prop key="time_format">HH:mm:ss</prop>
		        <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
			</props>
		</property>
		<!-- 全局变量部分 -->
		<property name="freemarkerVariables">
			<map>
				<entry key="IncPath" value="${inc.basepath}" />
				<entry key="path" value="${cas.server.name}" />
				<entry key="FileStoreService" value="${filestore.service.url}" />
				<entry key="xml_escape" value-ref="fmXmlEscape" />
				<entry key="NotifyPath" value="${golbal.widget.notify}" />
				<entry key="modifyPswPath" value="${modify.password.url}" />
			</map>
		</property>
	</bean>
	<bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape" />
	<!-- 配置freeMarker视图解析器 -->
	<bean id="ftlviewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="viewClass" value="com.i9he.m2b.manage.utils.B2BFreeMarkerView" />
		<!-- 如果配置了这个节点，则视图必须是ftl，redirect等前缀都失效了 -->
		<!-- <property name="viewNames" value="*.ftl"/> -->
		<property name="contentType" value="text/html;charset=UTF-8" />
		<property name="cache" value="true" />
		<property name="prefix" value="" />
		<property name="suffix" value="" />
	</bean>	
	
	<!-- 通过BeanFactoryAware，手动从spring容器获取bean -->
	
	<bean id="sqlSessionFactoryPrivilegeCorba" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSourcePrivilegeCorba" />
	</bean>
	<!-- 会自动将basePackage中配置的包路径下的所有带有@Mapper标注的接口生成代理类，实现数据访问 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryPrivilegeCorba" />
		<property name="basePackage" value="com.i9he.m2b.mapper,com.i9he.mall.mapper" />
		<property name="nameGenerator">
			<bean class="com.i9he.m2b.manage.utils.FullBeanNameGenerator" />
		</property>
	</bean>
	
	<beans profile="production">
		<bean id="dataSourcePrivilegeCorba" class="org.springframework.jndi.JndiObjectFactoryBean">
			<property name="jndiName" value="java:/MySqlDS_JDBC" />
		</bean>
	</beans>
    <beans profile="dev">
	    <bean id="dataSourcePrivilegeCorba" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	        <property name="driverClassName" value="${database.driverclass}"/>
		    <property name="url" value="${database.url}"/>
		    <property name="username" value="${database.username}"/>
		    <property name="password" value="${database.password}"/>
	    </bean>
    </beans>    
</beans>
